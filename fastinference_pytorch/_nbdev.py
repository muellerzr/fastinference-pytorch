# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"soft_import": "00_soft_dependencies.ipynb",
         "soft_imports": "00_soft_dependencies.ipynb",
         "SoftDependencies": "00_soft_dependencies.ipynb",
         "noop": "00a_core.utils.ipynb",
         "apply": "00a_core.utils.ipynb",
         "retain_type": "00a_core.utils.ipynb",
         "retain_meta": "00a_core.utils.ipynb",
         "to_device": "00a_core.utils.ipynb",
         "tensor": "00a_core.utils.ipynb",
         "ArrayBase": "00a_core.utils.ipynb",
         "ArrayImageBase": "00a_core.utils.ipynb",
         "ArrayImage": "00a_core.utils.ipynb",
         "to_numpy": "00a_core.utils.ipynb",
         "Tensor.set_meta": "00a_core.utils.ipynb",
         "Tensor.as_subclass": "00a_core.utils.ipynb",
         "TensorBase": "00a_core.utils.ipynb",
         "TensorImageBase": "00a_core.utils.ipynb",
         "TensorImage": "00a_core.utils.ipynb",
         "set_num_threads": "00b_core.data.ipynb",
         "set_seed": "00b_core.data.ipynb",
         "fa_collate": "00b_core.data.ipynb",
         "fa_convert": "00b_core.data.ipynb",
         "SkipItemException": "00b_core.data.ipynb",
         "get_image": "00c_core.learner.ipynb",
         "torch_preds": "00c_core.learner.ipynb",
         "onnx_preds": "00c_core.learner.ipynb",
         "Learner": "00c_core.learner.ipynb",
         "load_data": "00d_core.rebuild.ipynb",
         "load_model": "00d_core.rebuild.ipynb",
         "get_tfm": "00d_core.rebuild.ipynb",
         "generate_pipeline": "00d_core.rebuild.ipynb",
         "make_pipelines": "00d_core.rebuild.ipynb",
         "load_image": "01a_vision.transforms.ipynb",
         "show_image": "01a_vision.transforms.ipynb",
         "PILImage": "01a_vision.transforms.ipynb",
         "shape": "01a_vision.transforms.ipynb",
         "aspect": "01a_vision.transforms.ipynb",
         "Image.Image.reshape": "01a_vision.transforms.ipynb",
         "Image.Image.to_bytes_format": "01a_vision.transforms.ipynb",
         "Image.Image.to_thumb": "01a_vision.transforms.ipynb",
         "Image.Image.resize_max": "01a_vision.transforms.ipynb",
         "n_px": "01a_vision.transforms.ipynb",
         "RandTransform": "01a_vision.transforms.ipynb",
         "Image.Image.flip_lr": "01a_vision.transforms.ipynb",
         "FlipItem": "01a_vision.transforms.ipynb",
         "PILImage.dihedral": "01a_vision.transforms.ipynb",
         "DihedralItem": "01a_vision.transforms.ipynb",
         "Image.Image.crop_pad": "01a_vision.transforms.ipynb",
         "CropPad": "01a_vision.transforms.ipynb",
         "Resize": "01a_vision.transforms.ipynb",
         "RandomResizedCrop": "01a_vision.transforms.ipynb",
         "RatioResize": "01a_vision.transforms.ipynb",
         "TensorImage.affine_coord": "01a_vision.transforms.ipynb",
         "AffineCoordTfm": "01a_vision.transforms.ipynb",
         "RandomResizedCropGPU": "01a_vision.transforms.ipynb",
         "affine_mat": "01a_vision.transforms.ipynb",
         "mask_tensor": "01a_vision.transforms.ipynb",
         "flip_mat": "01a_vision.transforms.ipynb",
         "TensorImage.flip_batch": "01a_vision.transforms.ipynb",
         "Flip": "01a_vision.transforms.ipynb",
         "DeterministicDraw": "01a_vision.transforms.ipynb",
         "DeterministicFlip": "01a_vision.transforms.ipynb",
         "dihedral_mat": "01a_vision.transforms.ipynb",
         "TensorImage.dihedral_batch": "01a_vision.transforms.ipynb",
         "Dihedral": "01a_vision.transforms.ipynb",
         "DeterministicDihedral": "01a_vision.transforms.ipynb",
         "rotate_mat": "01a_vision.transforms.ipynb",
         "TensorImage.rotate": "01a_vision.transforms.ipynb",
         "Rotate": "01a_vision.transforms.ipynb",
         "zoom_mat": "01a_vision.transforms.ipynb",
         "TensorImage.zoom": "01a_vision.transforms.ipynb",
         "Zoom": "01a_vision.transforms.ipynb",
         "find_coeffs": "01a_vision.transforms.ipynb",
         "apply_perspective": "01a_vision.transforms.ipynb",
         "TensorImage.warp": "01a_vision.transforms.ipynb",
         "Warp": "01a_vision.transforms.ipynb",
         "TensorImage.lighting": "01a_vision.transforms.ipynb",
         "LightingTfm": "01a_vision.transforms.ipynb",
         "TensorImage.brightness": "01a_vision.transforms.ipynb",
         "Brightness": "01a_vision.transforms.ipynb",
         "TensorImage.contrast": "01a_vision.transforms.ipynb",
         "Contrast": "01a_vision.transforms.ipynb",
         "setup_aug_tfms": "01a_vision.transforms.ipynb",
         "aug_transforms": "01a_vision.transforms.ipynb",
         "Encoder": "01c_transforms.tabular.ipynb",
         "Tensorize": "01c_transforms.tabular.ipynb",
         "NumpyDataset": "01c_transforms.tabular.ipynb",
         "FillMissing": "01c_transforms.tabular.ipynb",
         "Categorize": "01c_transforms.tabular.ipynb",
         "Normalize": "01c_transforms.tabular.ipynb",
         "apply_procs": "01c_transforms.tabular.ipynb",
         "TabularDataset": "01c_transforms.tabular.ipynb",
         "tabular_learner": "01c_transforms.tabular.ipynb"}

modules = ["soft_dependencies.py",
           "core/utils.py",
           "core/data.py",
           "core/learner.py",
           "core/rebuild.py",
           "vision/transform.py",
           "transforms/tabular.py"]

doc_url = "https://muellerzr.github.io/fastinference_pytorch/"

git_url = "https://github.com/muellerzr/fastinference_pytorch/tree/master/"

def custom_doc_links(name): return None
